#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512

# Use CDROM installation media
cdrom

# Use graphical install
text

# Run the Setup Agent on first boot
firstboot --disable

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate
network  --hostname=snipe-it.localdomain

# Root password
rootpw --iscrypted $6$dnsLCX0eC1A7IAmD$8TVED7AnMjJi6KJ03wq10YjvpYmTsUp.Y.6Hxt.6VVyNQlGOAYANLdlnNlgXOHRq5804W81fOx7iI7K7rQYTh0

# System services
services --disabled="chronyd"

# System timezone
timezone Etc/UTC --isUtc --nontp

# Create admin user 
user --groups=wheel --name=snipeit --password=$6$kwQCTNf1kkHqWEQg$2kV7yaWRcjGUBsDW817khy5ycTShDSa8SbSMqJkqSxZno4t.yXy6PRajpyqfgOsmSK46Iw1WG4AaUPSwiQzx01 --iscrypted --gecos="snipeit"

# System bootloader configuration
zerombr 

# Partition clearing and creation
clearpart --all --initlabel
autopart --type=lvm

%packages
@^minimal
@core
kexec-tools
httpd
httpd-tools
git
python
perl
mariadb-server
unzip
policycoreutils-python
expect
%end

%packages --nobase
epel-release
ius-release
libmcrypt
php71u-gd
php71u-bcmath
php71u-common
php71u-xml
php71u-json
php71u-mcrypt
php71u-mbstring
php71u-embedded
php71u-process
mod_php71u
php71u-ldap
php71u-cli
php71u-pdo
php71u-mysqlnd


%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

reboot

%post --log=/root/ks-post.log

# Harden SSH
sed -i 's/#PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config
sed -i 's/#ClientAliveInterval 0/ClientAliveInterval 900/g' /etc/ssh/sshd_config
sed -i 's/#ClientAliveCountMax 3/ClientAliveCountMax 0/g' /etc/ssh/sshd_config
#/usr/bin/sed -i 's/#Banner none/"Banner /etc/issue"/g' /etc/ssh/sshd_config
echo "AllowUsers snipeit" >> /etc/ssh/sshd_config


# Configure SSH, HTTP and HTTPS only
/usr/bin/firewall-offline-cmd --set-default-zone=drop
/usr/bin/firewall-offline-cmd --zone=drop --add-service=ssh
/usr/bin/firewall-offline-cmd --zone=drop --add-service=http
/usr/bin/firewall-offline-cmd --zone=drop --add-service=https

# Enable Services
/bin/systemctl enable mariadb
/bin/systemctl enable httpd

# Enable SELinux Boolean
/sbin/setsebool -P httpd_can_sendmail on
/sbin/setsebool -P httpd_can_connect_ldap on

%end

%post --nochroot

# redirect the output to the log file
exec >/mnt/sysimage/root/ks-post-anaconda-chroot.log 2>&1

# show the output on the 7th console
tail -f /mnt/sysimage/root/ks-post-anaconda-chroot.log >/dev/tty7 &

# changing to VT 7 that we can see what's going on
/usr/bin/chvt 7

export SRCDIR="/run/install/repo"
export DSTDIR="/mnt/sysimage"

cp -v -r $SRCDIR/postinstall/. $DSTDIR/root/
find $DSTDIR/root/ -name "TRANS.TBL" -delete

# copy scripts to the destintion of the server
mv -v $DSTDIR/etc/issue $DSTDIR/etc/issue-backup
mv -v $DSTDIR/etc/issue.net $DSTDIR/etc/issue.net-backup
cp -v $SRCDIR/postinstall/pre_issue $DSTDIR/etc/issue
cp -v $SRCDIR/postinstall/pre_issue $DSTDIR/etc/issue.net
cp -v $SRCDIR/postinstall/snipeit_mail_setup.sh $DSTDIR/usr/local/bin/snipeit_mail.setup.sh
cp -v $SRCDIR/postinstall/mariadb_pass_change.sh $DSTDIR/usr/local/bin/mariadb_pass_change.sh
cp -v $SRCDIR/postinstall/snipeit.sh $DSTDIR/etc/profile.d/snipeit.sh
cp -v $SRCDIR/postinstall/snipe_alias.sh $DSTDIR/etc/profile.d/snipe_alias.sh
cp -v $SRCDIR/postinstall/issue $DSTDIR/root/issue
mkdir -v $DSTDIR/var/www/html/snipeit
rsync -rauv $SRCDIR/snipeit/ $DSTDIR/var/www/html/snipeit/


# Make scripts executable
chmod +x $DSTDIR/etc/profile.d/snipeit.sh
chmod +x $DSTDIR/usr/local/bin/snipeit_mail.setup.sh
chmod +x $DSTDIR/usr/local/bin/mariadb_pass_change.sh

echo "Rebooting..."

%end

reboot
