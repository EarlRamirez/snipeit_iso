#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512

# Use CDROM installation media
cdrom

# Use graphical install
text

# Run the Setup Agent on first boot
firstboot --disable

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate
network  --hostname=snipe-it

# Root password
rootpw --iscrypted $6$dnsLCX0eC1A7IAmD$8TVED7AnMjJi6KJ03wq10YjvpYmTsUp.Y.6Hxt.6VVyNQlGOAYANLdlnNlgXOHRq5804W81fOx7iI7K7rQYTh0

# System services
services --disabled="chronyd"

# System timezone
timezone Etc/UTC --isUtc --nontp

# Create admin user 
user --groups=wheel --name=snipeit --password=$6$kwQCTNf1kkHqWEQg$2kV7yaWRcjGUBsDW817khy5ycTShDSa8SbSMqJkqSxZno4t.yXy6PRajpyqfgOsmSK46Iw1WG4AaUPSwiQzx01 --iscrypted --gecos="Snipe-IT"

# System bootloader configuration
zerombr 

# Partition clearing and creation
clearpart --all --initlabel
autopart --type=lvm

%packages
@^minimal
@core
kexec-tools
httpd
httpd-tools
git
python
perl
mariadb-server
unzip
policycoreutils-python
expect
%end

%packages --nobase
epel-release
ius-release
libmcrypt
php72u-gd
php72u-bcmath
php72u-common
php72u-xml
php72u-json
php72u-mbstring
php72u-embedded
php72u-process
mod_php72u
php72u-ldap
php72u-cli
php72u-pdo
php72u-mysqlnd
libargon2
oniguruma
fail2ban
fail2ban-firewalld
fail2ban-sendmail
fail2ban-server
systemd-python

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

reboot

%post --log=/root/ks-post.log

# Harden SSH
sed -i 's/#PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config
sed -i 's/#ClientAliveInterval 0/ClientAliveInterval 900/g' /etc/ssh/sshd_config
sed -i 's/#ClientAliveCountMax 3/ClientAliveCountMax 0/g' /etc/ssh/sshd_config
sed -i 's/#MaxAuthTries 6/MaxAuthTries 4/g' /etc/ssh/sshd_config
sed -i 's/X11Forwarding yes/X11Forwarding no/g' /etc/ssh/sshd_config
sed -i 's/#LogLevel INFO/LogLevel INFO/g' /etc/ssh/sshd_config
sed -i 's/#IgnoreRhosts yes/IgnoreRhosts yes/g' /etc/ssh/sshd_config
sed -i 's/#PermitUserEnvironment no/PermitUserEnvironment no/g' /etc/ssh/sshd_config
#/usr/bin/sed -i 's/#Banner none/"Banner /etc/issue"/g' /etc/ssh/sshd_config
echo "" >> /etc/ssh/sshd_config
echo "# Restrict access to Snipe-IT user" >> /etc/ssh/sshd_config
echo "AllowUsers snipeit" >> /etc/ssh/sshd_config
echo "" >> /etc/ssh/sshd_config
echo "# Permit supported Ciphers, MAC and Algorithms" >> /etc/ssh/sshd_config
echo "Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr" >> /etc/ssh/sshd_config
echo "" >> /etc/ssh/sshd_config
echo "MACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128-etm@openssh.com" >> /etc/ssh/sshd_config
echo "" >> /etc/ssh/sshd_config
echo "KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group18-sha512,diffie-hellman-group16-sha512,diffie-hellman-group14-sha256" >> /etc/ssh/sshd_config

# Enforce password policy
sed -i 's/PASS_MAX_DAYS	99999/PASS_MAX_DAYS	90/g' /etc/login.defs
sed -i 's/PASS_MIN_LEN	5/PASS_MIN_LEN	9/g' /etc/login.defs
sed -i 's/PASS_WARN_AGE	7/PASS_WARN_AGE	14/g' /etc/login.defs
echo "FAILLOG_ENAB yes" >> /etc/login.defs
sed -i 's/# minlen = 9/minlen = 9/g' /etc/security/pwquality.conf
sed -i 's/# minclass = 0/minclass = 9/g' /etc/security/pwquality.conf
sed -i 's/# dcredit = 1/dcredit = 1/g' /etc/security/pwquality.conf
sed -i 's/# ucredit = 1/ucredit = 1/g' /etc/security/pwquality.conf
sed -i 's/# lcredit = 1/lcredit = 1/g' /etc/security/pwquality.conf
sed -i 's/# ocredit = 1/ocredit = 1/g' /etc/security/pwquality.conf

# Configure SSH, HTTP and HTTPS only
/usr/bin/firewall-offline-cmd --set-default-zone=drop
/usr/bin/firewall-offline-cmd --zone=drop --add-service=ssh
/usr/bin/firewall-offline-cmd --zone=drop --add-service=http

# Enable Services
/bin/systemctl enable mariadb
/bin/systemctl enable httpd
/bin/systemctl enable fail2ban
/bin/systemctl enable rc-local

# Enable SELinux Boolean
/sbin/setsebool -P httpd_can_sendmail on
/sbin/setsebool -P httpd_can_connect_ldap on
/sbin/setsebool -P httpd_can_network_connect on

# Disable uncommon protocols
echo "install dccp /bin/false" >> /etc/modprobe.d/CIS.conf
echo "install sctp /bin/false" >> /etc/modprobe.d/CIS.conf
echo "install rds /bin/false" >> /etc/modprobe.d/CIS.conf
echo "install tipc /bin/false" >> /etc/modprobe.d/CIS.conf

# Disable unused filesystems
echo "install cramfs /bin/false" >> /etc/modprobe.d/CIS.conf
echo "install freevxfs /bin/false" >> /etc/modprobe.d/CIS.conf
echo "install jffs2 /bin/false" >> /etc/modprobe.d/CIS.conf
echo "install hfs /bin/false" >> /etc/modprobe.d/CIS.conf
echo "install hfsplus /bin/false" >> /etc/modprobe.d/CIS.conf
echo "install squashfs /bin/false" >> /etc/modprobe.d/CIS.conf
echo "install udf /bin/false" >> /etc/modprobe.d/CIS.conf

# Disconnect idle sessions
echo "export TMOUT=900" >> /etc/profile

# Hide apache version
echo "ServerSignature Off" >> /etc/httpd/conf/httpd.conf
echo "ServerTokens Prod" >> /etc/httpd/conf/httpd.conf

# Fix composer cache files
mkdir -pv /usr/share/httpd/.composer
chgrp apache /usr/share/httpd/.composer
chmod g+w /usr/share/httpd/.composer

%end

%post --nochroot

# redirect the output to the log file
exec >/mnt/sysimage/root/ks-post-anaconda-chroot.log 2>&1

# show the output on the 7th console
tail -f /mnt/sysimage/root/ks-post-anaconda-chroot.log >/dev/tty7 &

# changing to VT 7 that we can see what's going on
/usr/bin/chvt 7

export SRCDIR="/run/install/repo"
export DSTDIR="/mnt/sysimage"

cp -v -r $SRCDIR/postinstall/. $DSTDIR/root/
find $DSTDIR/root/ -name "TRANS.TBL" -delete

# copy scripts to the destintion of the server
mv -v $DSTDIR/etc/issue $DSTDIR/etc/issue-backup
mv -v $DSTDIR/etc/issue.net $DSTDIR/etc/issue.net-backup
mv -v $DSTDIR/etc/rc.d/rc.local $DSTDIR/etc/rc.d/rc.local-backup
cp -v $SRCDIR/postinstall/pre_issue $DSTDIR/etc/issue
cp -v $SRCDIR/postinstall/pre_issue $DSTDIR/etc/issue.net
cp -v $SRCDIR/postinstall/snipeit_mail_setup.sh $DSTDIR/usr/local/bin/snipeit_mail.setup.sh
cp -v $SRCDIR/postinstall/mariadb_pass_change.sh $DSTDIR/usr/local/bin/mariadb_pass_change.sh
cp -v $SRCDIR/postinstall/snipeit.sh $DSTDIR/etc/profile.d/snipeit.sh
cp -v $SRCDIR/postinstall/issue $DSTDIR/root/issue
cp -vf $SRCDIR/postinstall/snipe_alias.sh $DSTDIR/home/snipeit/.bashrc
cp -v $SRCDIR/postinstall/snipe_upgrade.sh $DSTDIR/etc/cron.weekly/snipe_upgrade.sh
cp -v $SRCDIR/postinstall/rc.local $DSTDIR/etc/rc.d/rc.local
cp -v $SRCDIR/postinstall/jail.local $DSTDIR/etc/fail2ban/jail.local
cp -v $SRCDIR/postinstall/fail2ban.local $DSTDIR/etc/fail2ban/fail2ban.local

mkdir -v $DSTDIR/var/www/html/snipeit
rsync -rauv $SRCDIR/snipeit/ $DSTDIR/var/www/html/snipeit/

# Make scripts executable
chmod +x $DSTDIR/etc/profile.d/snipeit.sh
chmod +x $DSTDIR/etc/rc.d/rc.local
chmod +x $DSTDIR/usr/local/bin/snipeit_mail.setup.sh
chmod +x $DSTDIR/usr/local/bin/mariadb_pass_change.sh
chmod +x $DSTDIR/etc/cron.weekly/snipe_upgrade.sh
chown snipeit.snipeit $DSTDIR/home/snipeit/.bashrc

echo "Rebooting..."

%end

reboot
